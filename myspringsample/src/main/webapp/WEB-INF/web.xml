<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="WebApp_9"
         version="2.4"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">


    <!--启动spring的监听器,这样配置在xml文件中的bean才会初始化-->
    <!--spring有三种启动方式,使用ContextLoaderServlet,ContextLoaderListener和ContextLoaderPlugIn.-->
    <listener>
        <listener-class>
            <!--Bootstrap listener to start up Spring's root WebApplicationContext.-->
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <!--用作应用的servlet上下文初始化参数-->
    <context-param>
        <!--contextConfigLocation参数定义了要装入的 Spring 配置文件。-->
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring-mvc.xml
            /WEB-INF/spring-webflow.xml
            /WEB-INF/database/dataSource.xml
            /WEB-INF/database/hibernate.xml
            <!--/WEB-INF/spring-security.xml-->
        </param-value>
    </context-param>

    <!--为使用 Spring Web MVC ，须在 web.xml 中声明 DispatcherServlet-->
    <!--客户端发送请求至服务器-->
    <!--服务器启动并调用Servlet，Servlet根据客户端请求生成响应内容并将其传给服务器-->
    <!--服务器将响应返回客户端-->
    <!--容器控制servlet的生命周期-->
    <!--servlet一旦被加载，一般不会从容器中删除，直至应用服务器关闭或重新启动-->
    <servlet>
        <servlet-name>TestSample</servlet-name>
        <!--Central dispatcher for HTTP request handlers/controllers, e.g.
        for web UI controllers or HTTP-based remote service exporters.
        Dispatches to registered handlers for processing a web request,
        providing convenient mapping and exception handling facilities.-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--当值为0或者大于0时，表示容器在应用启动时就加载这个servlet-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--servlet-mapping元素在Servlet和URL样式之间定义一个映射-->
    <servlet-mapping>
        <servlet-name>TestSample</servlet-name>
        <!--以一个单独的/指示这个Web应用程序默认的Servlet-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- Spring Security -->
    <!--<filter>-->
        <!--<filter-name>springSecurityFilterChain</filter-name>-->
        <!--<filter-class>-->
            <!--org.springframework.web.filter.DelegatingFilterProxy-->
        <!--</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>springSecurityFilterChain</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
</web-app>